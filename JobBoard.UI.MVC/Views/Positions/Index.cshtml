@model IEnumerable<JobBoard.DATA.MVC.Position>

@{
    ViewBag.Title = "Company Positions";
}

<h2>@ViewBag.Title</h2>

@if (User.IsInRole("Admin"))
{
    <h2>
        <button id="togglePositionCreate" class="btn btn-primary">
            Create Position
        </button>
    </h2>

    <!--AjaxCreate Form-->
    <div id="PositionCreate">
        @*Render a partial view*@
        @Html.Partial("PositionCreate", new JobBoard.DATA.MVC.Position())
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JobDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.PositionId }) |
                @if (User.IsInRole("Admin"))
                {
                    if (User.IsInRole("Admin") || User.IsInRole("Management"))
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.PositionId }) <span>|</span>
                    }
                    @Html.ActionLink("Delete", "Delete", new { id = item.PositionId })
                }
            </td>
        </tr>
    }

</table>


@section scripts{

    <script type="text/javascript">
        //#region AJAX Show Create Form

            //This toggles the end user capatability to see the form

            //When the create publisher button is clicked toggle the create form visibility back on ( it should start hidden)
            $('#PositionCreate').hide();
            $('#togglePositionCreate').click(function () {
                $('#PositionCreate').toggle();
            //Toggle the text and color of Button
                if ($('#PositionCreate').is(':visible')) {
                    $('#togglePositionCreate').html('Cancel')
                    $('#togglePositionCreate').attr('class', 'btn btn-danger')
            } else {
                    $('#togglePositionCreate').html('Create Position')
                    $('#togglePositionCreate').attr('class', 'btn btn-primary')
            }
            });

            //Submit Form
            $('#PositionCreateForm').submit(function (e) {
                //Serialize (package the form data for transport as an object)
                //Create an array of objects with a name and value
                var formData = $(this).serializeArray();
                //Interrupt the normal submit event
                e.preventDefault();
                //Message the user while processing
                $('#MessageContent').html('<div class="alert alert-info">Please wait...</div>');
                //call to AJAX
                $.ajax({
                    //Call the POST PublisherCreate Action
                    url:"@Url.Action("PositionCreate","Filters")",
                    type: 'POST',
                    //serialized form data
                    data: formData,
                    //sending as Json request
                    dataType: 'json',
                    //If it works, show the success message in the <div> located above the RenderBody in the Layout
                    success: function (data) {
                    $('#MessageContent').html("<div class='alert alert-success'>Your record was successfully inserted!</div>");
                    //Clear the form
                    $('#PositionCreateForm')[0].reset();
                    //Add the temporary row to the table (remember the browser is begin manually updated so you will see a message to refresh the view to see the links)
                    //You could code these in, we're leaving out so you can see asynchronous activity
                    //When the view is refreshed the new record will load into the table with links in the last column
                    $(function () {
                        var row = '<tr><td>' + data.PublisherName + '</td><td>' + data.City + '</td><td>' + data.State + '</td><td>Refresh to View Options</td></tr>';//Buttons are not available for this new item
                        //Add the row to the table
                        $('#PositionTable').append(row);

                        //close the form and show the create button
                        $('#PositionCreate').toggle();
                        $('#togglePositionCreate').html('Create Position')
                        $('#togglePositionCreate').attr('class', 'btn btn-primary')
                    });
                },
                    //If there is an error, then show the alert message in the div located above the RenderBody
                    error: function (e) {
                    $('#MessageContent').html("<div class='alert a;ert-warning'> There was an error. Please try again or contact the site admin.</div>");
                }
                });
            });
        //#endregion
    </script>

}